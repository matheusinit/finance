services:
  load-balancer:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    environment:
      NGINX_PORT: 80
    depends_on:
      - app1
      - app2
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '256MB'

  app1:
    build:
      context: .
      args:
        RAILS_ENV: production
    ports:
      - 3000:3000
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      RAILS_MAX_THREADS: 5 
      DB_POOL: 20 
      WEB_CONCURRENCY: 1 
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '500MB'

  app2:
    build:
      context: .
      args:
        RAILS_ENV: production 
    ports:
      - 3001:3000
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      RAILS_MAX_THREADS: 5 
      DB_POOL: 20 
      WEB_CONCURRENCY: 1 
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '500MB'

  # app3:
  #   build:
  #     context: .
  #     args:
  #       RAILS_ENV: production 
  #   ports:
  #     - 3002:3000
  #   environment:
  #     POSTGRES_HOST: ${POSTGRES_HOST}
  #     POSTGRES_PORT: ${POSTGRES_PORT}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
  #     RAILS_MAX_THREADS: 40
  #     DB_POOL: 80
  #     WEB_CONCURRENCY: 2 
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '1'
  #         memory: '500MB'

  database:
    image: postgres:15.7-bookworm
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 54329:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql.conf
    # command: postgres -c config_file=/etc/postgresql.conf 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '500MB'

volumes:
  pgdata:

networks:
  default:
    driver: bridge
    name: finance_virtual_network
